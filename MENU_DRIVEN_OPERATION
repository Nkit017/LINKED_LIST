#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node *next;
};struct node *head=NULL,*ptr;
void insert_at_begin(int value)
{
	struct node *temp=(struct node *)malloc(sizeof(struct node));
	temp->data=value;
	temp->next=NULL;
	if (head==NULL)
	{
		head=temp;
	}
		else
	{
		temp->next=head;
		head=temp;
	}
}
void insert_at_end(int value)
{
	struct node *temp=(struct node *)malloc(sizeof(struct node));
	temp->data=value;
	temp->next=NULL;
	if (head==NULL)
	{
		head=temp;
	}
	else
	{
		ptr=head;
		while(ptr->next!=NULL)
		{
			ptr=ptr->next;
		}
		ptr->next=temp;
		temp->next=NULL;
	}
}
void insert_at_position(int value, int pos)
{
	struct node *temp=(struct node *)malloc(sizeof(struct node));
	temp->data=value;
	temp->next=NULL;
	if (head==NULL)
	{
		head=temp;
	}
	else
	{
		ptr=head;
		int count=0;
		while(count<pos-2)
		{
		ptr=ptr->next;
		count++;	
		}
		struct node *ptr1;
		ptr1=ptr->next;
		ptr->next=temp;
		temp->next=ptr1; 
	}
}
void delete_at_begin()
{
	if (head==NULL)
	{
		printf("no node to delete");
	}
	else
	{
		ptr=head->next;
		free(head);
		head=ptr;
		
	}
}
void delete_at_end()
{
	if (head==NULL)
	{
		printf("no node to delete");
	}
	else
	{
		ptr=head;
		while(ptr->next->next!=NULL)
		{
			ptr=ptr->next;
		}
		struct node *ptr1;
		ptr1=ptr->next;
		free(ptr1);
		ptr->next=NULL;
	}
}
void delete_at_middle(int ele)
{
    if (head==NULL)
	{
		printf("no node to delete");
	}	
	else
	{
		struct node *p;
		ptr=head;
		while(ptr->data!=ele)
		{
			p=ptr;
			ptr=ptr->next;
		}
		p->next=ptr->next;
		free(ptr);
		
	}
}
void display()
{
	if (head==NULL)
	{
		printf("nothing to display");
	}
	else
	{
		ptr=head;
		while(ptr!=NULL)
		{
			printf("%d",ptr->data);
			ptr=ptr->next;
		}
		printf("\n");
	}
}
void main()
{int choice,n,p;
	printf("MENU DRIVEN PROGRAM FOR LINKED LIST\n");
	printf("ANKIT SINGH/NIT-KKR/323103114\n");
	printf("CHOICES\n");
	printf("1.INSERT AT BEGINING\n");
	printf("2.INSERT AT END\n");
	printf("3.INSERT AT POSITION\n");
	printf("4.DELETE AT BEGINING\n");
	printf("5.DELETE AT END\n");
	printf("6.DELETE AT POSITION\n");
	printf("7.DISPLAY THE LIST\n");
	printf("8.EXIT\n");
	while(1)
	{
	
	printf("enter the choice\n");
	scanf("%d",&choice);
	switch(choice)
	{
		case 1:
			
			printf("enter the value");
			scanf("%d",&n);
			insert_at_begin(n);
			display();
			break;
		case 2:
			
			printf("enter the value");
			scanf("%d",&n);
			insert_at_end(n);
			display();
			break;
		case 3:
			
			printf("enter the value");
			scanf("%d",&n);
			printf("enter the position");
			scanf("%d",&p);
			insert_at_position(n,p);
			display();
			break;
		case 4:
			delete_at_begin();
			display();
			break;
		case 5:
			delete_at_end();
			display();
			break;
		case 6:
			printf("enter the value");
			scanf("%d",&n);
			delete_at_middle(n);
			display();
			break;
		case 7:
			display();
			break;
		case 8:
			exit(1);
			break;
		default:
			printf("invalid choice");
	}
}
}
